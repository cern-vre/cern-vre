---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: iam-sync
  namespace: rucio
spec:
  schedule: "*/10 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure 
          containers:
            - name: iam-sync
              image: ghcr.io/vre-hub/vre-iam-rucio-sync:latest
              volumeMounts:
              - name: rucio-cfg
                mountPath: /opt/rucio/etc/
              env:
              - name: IAM_SERVER
                value: "https://iam-escape.cloud.cnaf.infn.it"
              - name: IAM_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: iam-client
                    key: admin-client_secret
              - name: IAM_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: iam-client
                    key: admin-client_id
              tty: true
              imagePullPolicy: Always
              command:
              - /bin/sh
              - -c
              - date; echo Hello from iam-rucio-sync container; 
                pwd; ls;
                echo $IAM_SERVER; python3 /home/user/vre/containers/iam-rucio-sync/sync_iam_rucio.py; echo '* Sync to IAM * Done!'
          volumes:
            - name: rucio-cfg
              secret:
                secretName: rucio-cfg
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rucio-noise
  namespace: rucio
spec:
  schedule: "*/10 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure 
          containers:
            - name: rucio-noise
              image: ghcr.io/vre-hub/vre-rucio-noise:latest
              volumeMounts:
              - name: escape-service-account
                mountPath: /opt/rucio/etc/
              - name: prod-rucio-x509up
                mountPath: /tmp/
              env:
              - name: RUCIO_CFG_CLIENT_X509_PROXY 
                valueFrom:
                  secretKeyRef:
                    name: prod-rucio-x509up
                    key: x509up
              - name: RUCIO_CFG_CLIENT_CERT 
                valueFrom:
                  secretKeyRef:
                    name: escape-service-account
                    key: usercert.pem
              - name: RUCIO_CFG_CLIENT_key 
                valueFrom:
                  secretKeyRef:
                    name: escape-service-account
                    key: userkey.pem
              - name: RUCIO_CFG_CA_CERT
                valueFrom:
                    secretKeyRef:
                      name: rucio-server-cvre-server-cafile
                      key: ca.pem
              tty: true
              imagePullPolicy: Always
              command:
              - /bin/sh
              - -c
              - date; pwd; cd /root/.globus/; ls; chmod 400 userkey.pem; cd /opt/rucio/etc/; ls; echo Hello from rucio-noise container; export RUCIO_CONFIG=/opt/rucio/etc/rucio.cfg; echo Exported config; rucio -vvv whoami; FILE_SIZE=10M /bin/bash /home/user/vre/containers/rucio-noise/produce_noise.sh; echo 'DB cleanup Done!'
          volumes:
            - name: prod-rucio-x509up
              secret:
                secretName: prod-rucio-x509up
            - name: escape-service-account
              secret:
                secretName: escape-service-account
                defaultMode: 256  # equivalent to chmod 400 for the userkey.pem 
---
apiVersion: v1
kind: Pod
metadata:
  name: rucio-client
  namespace: rucio
spec:
  containers:
  - name: rucio-client
    image: ghcr.io/vre-hub/vre-rucio-client:latest
    imagePullPolicy: Always
    env:
    - name: RUCIO_CFG_RUCIO_HOST
      value: "https://vre-rucio.cern.ch"
    - name: RUCIO_CFG_AUTH_HOST
      value: "https://vre-rucio-auth.cern.ch"
    - name: RUCIO_CFG_ACCOUNT
      value: "root"
    - name: RUCIO_CFG_AUTH_TYPE
      value: "userpass"
    - name: RUCIO_CFG_USERNAME
      valueFrom:
        secretKeyRef:
          name: root-account
          key: root-username
    - name: RUCIO_CFG_PASSWORD
      valueFrom:
        secretKeyRef:
          name: root-account
          key: root-password 
    command: ["sleep","3600"]
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi
